function  data_out = get_synthetic_data_cross(synthData_use, timeBinIndex)
%%%%%% This only applies to old synthetic data that Ralf provided, and
%%%%%% should not be used for real interleaved data generated by Shizhao
nRepeat                 = size(synthData_use(1).X_response_original,1);
idx_data                = find(cell2mat({synthData_use(:).timebinIndex}) == timeBinIndex); % find data correspond to this timebin
nCondition              = numel(idx_data); % number of stimulus conditions


data_out                = struct();
tmp_original            = {synthData_use(idx_data).X_response_original};
tmp_shift               = {synthData_use(idx_data).X_response_shift};
data_out.spikeCount     = [cat(1,tmp_original{:}); cat(1,tmp_shift{:})];

nTrial                  = size(data_out.spikeCount,1);
data_out.signal         = zeros(nTrial,1);
data_out.orientation    = zeros(nTrial,1);

for i = 1:nCondition
    idx_trial = [(i-1) * nRepeat  + 1 : i * nRepeat];
    contrast = synthData_use(idx_data(i)).stimulus_contrast;
    data_out.signal(idx_trial) = contrast(1) - contrast(2);
    if contrast(1) >= contrast(2)
        data_out.orientation(idx_trial) = 0;
    else
        data_out.orientation(idx_trial) = 90;
    end
end
for i  = 1:nCondition

    idx_trial =  [(i-1) * nRepeat  + 1 : i * nRepeat] + nCondition * nRepeat;
    contrast = synthData_use(idx_data(i)).stimulus_contrast;
    data_out.signal(idx_trial) = contrast(1) - contrast(2);
    if contrast(1) >= contrast(2)
        data_out.orientation(idx_trial) = 45;
    else
        data_out.orientation(idx_trial) = 135;
    end
end



data_out.behavCorrect    = ones(nTrial,1);


data_out.timebin = synthData_use(idx_data(i)).timebin;


end